1.4
    - hcf.py : uses Euclidean Algorithm

1.5
    - print_1_to_N.py : forward tracking and backtracking
    - sum_first_n_numbers.py : paramaterised and functional recursion

    Notes: 
        - Stack (Auxiliary) Space Complexity is also present in recursion
        - Storing certain values before recursive call is useful in remebering those values for actions after recursive call
        - chr() for int -> char and ord() for char -> int, 128 charachters in python ASCII table

1.6
    - highest_lowest_freq.py : 
        * make sure to simplify solution, using multiple O(n) loops one after other is not a problem, does not increase complexity
        * use import sys : sys.maxsize for maximum integer, -sys.minsize - 1 for minimum integer
